// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProiectDAW.DAL;

namespace ProiectDAW.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211203174549_TablesCreate")]
    partial class TablesCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProiectDAW.DAL.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ConstructorName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<int>("EnigineNr")
                        .HasColumnType("int");

                    b.Property<int>("GearboxNr")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ConstructorName");

                    b.HasIndex("DriverId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("ProiectDAW.DAL.Entities.Constructor", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SponsorId")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.HasIndex("SponsorId");

                    b.ToTable("Constructors");
                });

            modelBuilder.Entity("ProiectDAW.DAL.Entities.ConstructorSponsors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConstructorName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SponsorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConstructorName");

                    b.HasIndex("SponsorId");

                    b.ToTable("ConstructorsSponsors");
                });

            modelBuilder.Entity("ProiectDAW.DAL.Entities.Driver", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConstructorName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConstructorName");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("ProiectDAW.DAL.Entities.DriverStandings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<int>("Place")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("Races")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.ToTable("DriversStandings");
                });

            modelBuilder.Entity("ProiectDAW.DAL.Entities.GrandPrix", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Laps")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GrandPrix");
                });

            modelBuilder.Entity("ProiectDAW.DAL.Entities.GrandPrixResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DriverId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DriverId1")
                        .HasColumnType("int");

                    b.Property<string>("GrandPrixId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GrandPrixId1")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("Stints")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DriverId1");

                    b.HasIndex("GrandPrixId1");

                    b.ToTable("GrandPrixResults");
                });

            modelBuilder.Entity("ProiectDAW.DAL.Entities.Sponsor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sponsors");
                });

            modelBuilder.Entity("ProiectDAW.DAL.Entities.Car", b =>
                {
                    b.HasOne("ProiectDAW.DAL.Entities.Constructor", "Constructor")
                        .WithMany()
                        .HasForeignKey("ConstructorName");

                    b.HasOne("ProiectDAW.DAL.Entities.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Constructor");

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("ProiectDAW.DAL.Entities.Constructor", b =>
                {
                    b.HasOne("ProiectDAW.DAL.Entities.Sponsor", null)
                        .WithMany("Constructors")
                        .HasForeignKey("SponsorId");
                });

            modelBuilder.Entity("ProiectDAW.DAL.Entities.ConstructorSponsors", b =>
                {
                    b.HasOne("ProiectDAW.DAL.Entities.Constructor", "Constructor")
                        .WithMany()
                        .HasForeignKey("ConstructorName");

                    b.HasOne("ProiectDAW.DAL.Entities.Sponsor", "Sponsor")
                        .WithMany()
                        .HasForeignKey("SponsorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Constructor");

                    b.Navigation("Sponsor");
                });

            modelBuilder.Entity("ProiectDAW.DAL.Entities.Driver", b =>
                {
                    b.HasOne("ProiectDAW.DAL.Entities.Constructor", "Constructor")
                        .WithMany()
                        .HasForeignKey("ConstructorName");

                    b.Navigation("Constructor");
                });

            modelBuilder.Entity("ProiectDAW.DAL.Entities.DriverStandings", b =>
                {
                    b.HasOne("ProiectDAW.DAL.Entities.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("ProiectDAW.DAL.Entities.GrandPrixResult", b =>
                {
                    b.HasOne("ProiectDAW.DAL.Entities.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId1");

                    b.HasOne("ProiectDAW.DAL.Entities.GrandPrix", "GrandPrix")
                        .WithMany()
                        .HasForeignKey("GrandPrixId1");

                    b.Navigation("Driver");

                    b.Navigation("GrandPrix");
                });

            modelBuilder.Entity("ProiectDAW.DAL.Entities.Sponsor", b =>
                {
                    b.Navigation("Constructors");
                });
#pragma warning restore 612, 618
        }
    }
}
